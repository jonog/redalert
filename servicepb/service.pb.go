// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

/*
Package servicepb is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	CheckListRequest
	CheckListResponse
	Check
*/
package servicepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Check_Status int32

const (
	Check_DISABLED   Check_Status = 0
	Check_UNKNOWN    Check_Status = 1
	Check_FAILING    Check_Status = 2
	Check_SUCCESSFUL Check_Status = 3
)

var Check_Status_name = map[int32]string{
	0: "DISABLED",
	1: "UNKNOWN",
	2: "FAILING",
	3: "SUCCESSFUL",
}
var Check_Status_value = map[string]int32{
	"DISABLED":   0,
	"UNKNOWN":    1,
	"FAILING":    2,
	"SUCCESSFUL": 3,
}

func (x Check_Status) String() string {
	return proto.EnumName(Check_Status_name, int32(x))
}
func (Check_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type CheckListRequest struct {
}

func (m *CheckListRequest) Reset()                    { *m = CheckListRequest{} }
func (m *CheckListRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckListRequest) ProtoMessage()               {}
func (*CheckListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CheckListResponse struct {
	Members []*Check `protobuf:"bytes,1,rep,name=members" json:"members,omitempty"`
}

func (m *CheckListResponse) Reset()                    { *m = CheckListResponse{} }
func (m *CheckListResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckListResponse) ProtoMessage()               {}
func (*CheckListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CheckListResponse) GetMembers() []*Check {
	if m != nil {
		return m.Members
	}
	return nil
}

type Check struct {
	ID      string       `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Name    string       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type    string       `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Status  Check_Status `protobuf:"varint,4,opt,name=status,enum=servicepb.Check_Status" json:"status,omitempty"`
	Enabled bool         `protobuf:"varint,5,opt,name=enabled" json:"enabled,omitempty"`
}

func (m *Check) Reset()                    { *m = Check{} }
func (m *Check) String() string            { return proto.CompactTextString(m) }
func (*Check) ProtoMessage()               {}
func (*Check) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*CheckListRequest)(nil), "servicepb.CheckListRequest")
	proto.RegisterType((*CheckListResponse)(nil), "servicepb.CheckListResponse")
	proto.RegisterType((*Check)(nil), "servicepb.Check")
	proto.RegisterEnum("servicepb.Check_Status", Check_Status_name, Check_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for RedalertService service

type RedalertServiceClient interface {
	// CheckList lists all the checks in configuration
	CheckList(ctx context.Context, in *CheckListRequest, opts ...grpc.CallOption) (*CheckListResponse, error)
}

type redalertServiceClient struct {
	cc *grpc.ClientConn
}

func NewRedalertServiceClient(cc *grpc.ClientConn) RedalertServiceClient {
	return &redalertServiceClient{cc}
}

func (c *redalertServiceClient) CheckList(ctx context.Context, in *CheckListRequest, opts ...grpc.CallOption) (*CheckListResponse, error) {
	out := new(CheckListResponse)
	err := grpc.Invoke(ctx, "/servicepb.RedalertService/CheckList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RedalertService service

type RedalertServiceServer interface {
	// CheckList lists all the checks in configuration
	CheckList(context.Context, *CheckListRequest) (*CheckListResponse, error)
}

func RegisterRedalertServiceServer(s *grpc.Server, srv RedalertServiceServer) {
	s.RegisterService(&_RedalertService_serviceDesc, srv)
}

func _RedalertService_CheckList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RedalertServiceServer).CheckList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/servicepb.RedalertService/CheckList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RedalertServiceServer).CheckList(ctx, req.(*CheckListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RedalertService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "servicepb.RedalertService",
	HandlerType: (*RedalertServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckList",
			Handler:    _RedalertService_CheckList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4e, 0xf2, 0x40,
	0x14, 0xc5, 0x69, 0xf9, 0x7f, 0xf9, 0x3e, 0x1c, 0xef, 0xc6, 0x89, 0xba, 0x30, 0x5d, 0x11, 0x17,
	0x35, 0xc1, 0x07, 0x50, 0xa4, 0xa0, 0x8d, 0x4d, 0x4d, 0x66, 0x42, 0x5c, 0xb8, 0x6a, 0xe1, 0x26,
	0x12, 0xa1, 0xad, 0x9d, 0xc1, 0xc4, 0x77, 0xf4, 0xa1, 0x6c, 0xa7, 0x40, 0x08, 0x71, 0x77, 0xcf,
	0xef, 0x9e, 0xdb, 0x9e, 0x9c, 0x81, 0xff, 0x8a, 0xf2, 0xaf, 0xe5, 0x9c, 0xdc, 0x2c, 0x4f, 0x75,
	0x8a, 0xdd, 0xad, 0xcc, 0x62, 0x07, 0x81, 0x8d, 0xdf, 0x69, 0xfe, 0x11, 0x2c, 0x95, 0x16, 0xf4,
	0xb9, 0x21, 0xa5, 0x9d, 0x3b, 0x38, 0x3d, 0x60, 0x2a, 0x4b, 0x13, 0x45, 0x78, 0x0d, 0xed, 0x35,
	0xad, 0x63, 0xca, 0x15, 0xb7, 0xae, 0xea, 0x83, 0xde, 0x90, 0xb9, 0xfb, 0xaf, 0xb8, 0xc6, 0x2e,
	0x76, 0x06, 0xe7, 0xc7, 0x82, 0xa6, 0x41, 0xd8, 0x07, 0xdb, 0xf7, 0x8a, 0x03, 0x6b, 0xd0, 0x15,
	0xf6, 0xd2, 0x43, 0x84, 0x46, 0x12, 0xad, 0x89, 0xdb, 0x86, 0x98, 0xb9, 0x64, 0xfa, 0x3b, 0x23,
	0x5e, 0xaf, 0x58, 0x39, 0xe3, 0x0d, 0xb4, 0x94, 0x8e, 0xf4, 0x46, 0xf1, 0x46, 0x41, 0xfb, 0xc3,
	0xb3, 0xe3, 0x9f, 0xb9, 0xd2, 0xac, 0xc5, 0xd6, 0x86, 0x1c, 0xda, 0x94, 0x44, 0xf1, 0x8a, 0x16,
	0xbc, 0x59, 0x5c, 0x74, 0xc4, 0x4e, 0x3a, 0xf7, 0xd0, 0xaa, 0xbc, 0xf8, 0x0f, 0x3a, 0x9e, 0x2f,
	0x47, 0x0f, 0xc1, 0xc4, 0x63, 0x35, 0xec, 0x41, 0x7b, 0x16, 0x3e, 0x87, 0x2f, 0xaf, 0x21, 0xb3,
	0x4a, 0x31, 0x1d, 0xf9, 0x81, 0x1f, 0x3e, 0x32, 0xbb, 0x08, 0x0d, 0x72, 0x36, 0x1e, 0x4f, 0xa4,
	0x9c, 0xce, 0x02, 0x56, 0x1f, 0xbe, 0xc1, 0x89, 0xa0, 0x45, 0xb4, 0xa2, 0x5c, 0xcb, 0x2a, 0x05,
	0x3e, 0x41, 0x77, 0x5f, 0x11, 0x5e, 0x1c, 0x87, 0x3b, 0x28, 0xf3, 0xfc, 0xf2, 0xef, 0x65, 0xd5,
	0xaa, 0x53, 0x8b, 0x5b, 0xe6, 0x49, 0x6e, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x55, 0x5d,
	0xfb, 0xa3, 0x01, 0x00, 0x00,
}
